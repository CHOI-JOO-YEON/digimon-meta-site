name: Deploy Spring Server to EC2

on:
  push:
    branches:
      - master

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      # 1. GitHub 리포지토리에서 코드를 체크아웃합니다.
      - name: Checkout code
        uses: actions/checkout@v3

      # 2. Java 21 버전을 설정합니다.
      - name: Set up JDK 21
        uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: '21'

      # 3. Gradle을 사용해 애플리케이션을 빌드합니다.
      - name: Build with Gradle
        run: ./gradlew clean build -x test

      # 4. SSH 에이전트를 설정하고 SSH 키를 로드합니다.
      - name: Set up SSH agent
        uses: webfactory/ssh-agent@v0.5.4
        with:
          ssh-private-key: ${{ secrets.SSH_PRIVATE_KEY }}

      # 5. EC2와 SSH 연결을 확인합니다.
      - name: Test SSH connection to EC2
        run: ssh -o StrictHostKeyChecking=no ubuntu@${{ secrets.EC2_IP }} "echo SSH connection successful"

      # 6. 빌드된 JAR 파일을 EC2로 전송합니다.
      - name: Copy JAR file to EC2
        run: |
          scp -o StrictHostKeyChecking=no \
          build/libs/*.jar \
          ubuntu@${{ secrets.EC2_IP }}:/home/ubuntu/app.jar

      # 7. EC2에 SSH 접속 후 Docker 컨테이너 실행
      - name: SSH into EC2 and deploy with Docker
        run: |
          ssh -o StrictHostKeyChecking=no ubuntu@${{ secrets.EC2_IP }} << 'EOF'
          sudo docker stop digimon-meta || true
          sudo docker rm digimon-meta || true

          sudo docker run -d --name digimon-meta \
            -p 80:8080 \
            -v /home/ubuntu/app.jar:/app.jar \
            openjdk:21-jdk \
            java -jar /app.jar --spring.profiles.active=prod-ec2
          EOF
