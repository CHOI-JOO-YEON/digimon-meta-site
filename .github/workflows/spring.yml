name: Deploy Spring Server to EC2 with AWS Secrets Manager

on:
  push:
    branches:
      - master  

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
    # 1. GitHub 리포지토리에서 코드를 체크아웃합니다.
    - name: Checkout code
      uses: actions/checkout@v2

    # 2. gradlew에 실행 권한을 부여합니다.
    - name: Grant execute permission for gradlew
      run: chmod +x ./gradlew

    # 3. Java 21 버전을 설정합니다.
    - name: Set up JDK 21
      uses: actions/setup-java@v1
      with:
        java-version: '21'

    # 4. Gradle을 사용해 애플리케이션을 빌드합니다.
    - name: Build with Gradle
      run: ./gradlew clean build -x test 

    # 5. GitHub Secrets에서 SSH 키를 설정합니다.
    - name: Setup SSH key
      run: |
        mkdir -p ~/.ssh
        echo "${{ secrets.SSH_PRIVATE_KEY }}" > ~/.ssh/id_rsa
        chmod 600 ~/.ssh/id_rsa
        # SSH 호스트 키 검증 비활성화
        echo -e "Host *\n\tStrictHostKeyChecking no\n" > ~/.ssh/config

    # 6. 빌드된 JAR 파일을 EC2로 전송합니다.
    - name: Copy files to EC2
      run: |
        scp -i ~/.ssh/id_rsa \
          build/libs/digimon-meta-site-0.0.1-SNAPSHOT.jar \
          ubuntu@13.125.113.222:/home/ubuntu/

    # 7. EC2로 SSH 접속 후 Docker 컨테이너를 실행합니다.
    - name: SSH into EC2 and deploy with Docker
      run: |
        ssh -i ~/.ssh/id_rsa ubuntu@13.125.113.222 << 'EOF'
        
        # AWS CLI와 jq 설치
        sudo apt update
        sudo apt install -y awscli jq
        
        # AWS Secrets Manager에서 모든 시크릿을 가져옵니다
        SECRETS=$(aws secretsmanager get-secret-value --secret-id digimon_meta_secrets --query SecretString --output text)

        # JSON 응답에서 모든 키-값을 환경 변수로 설정
        echo $SECRETS | jq -r 'to_entries | .[] | "export \(.key)=\(.value)"' > /tmp/set_envs.sh
        source /tmp/set_envs.sh

        # 이미 실행 중인 컨테이너가 있으면 중지하고 제거
        docker stop digimon-meta || true
        docker rm digimon-meta || true

        # 환경 변수를 사용하여 Docker 컨테이너 실행
        docker run -d --name digimon-meta \
        -p 8080:8080 /home/ubuntu/digimon-meta-site-0.0.1-SNAPSHOT.jar
        EOF
      env:
        SSH_PRIVATE_KEY: ${{ secrets.SSH_PRIVATE_KEY }}
